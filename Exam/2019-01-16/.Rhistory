help(model.matrix)
help(glm)
setwd("//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(Dataframe)
help(seq)
help(curve)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
n=dim(mortality)[1]
n=dim(mortality)[2]
n=length(mortality[,1])
mortality
n=length(mortality[1,])
n=length(mortality)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
like(mortality, lambda)
sum(log(factorial(mortality)))
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
is.finite(like(mortality, lambda))
lambda_max=lambda_max(mortality)
#Find maximum likelihood value of theta
lambda_max = function(y){
n=length(y)
return(sum(y)/n)
}
lambda_max=lambda_max(mortality)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
log(like(mortality, lambda))
factorial(y)
factorial(mortality)
log(factorial(mortality[1]))
log(factorial(mortality[1]))
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
help(scale)
debugSource('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('~/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(Dataframe)
View(Dataframe)
Dataframe=read.csv("Influenza.csv")
Dataframe=as.matrix(Dataframe)
View(Dataframe)
Dataframe$Mortality
Dataframe[Mortality]
Dataframe=read.csv("Influenza.csv")
Dataframe=as.matrix(Dataframe)
mortality=Dataframe[,3]
Dataframe=read.csv("Influenza.csv")
Dataframe=as.matrix(Dataframe)
mortality=Dataframe[,3]
Dataframe=scale(Dataframe)
Dataframe[,3]=mortality
View(Dataframe)
RNGversion('3.5.1')
Dataframe=read.csv("Influenza.csv")
Dataframe=as.matrix(Dataframe)
mortality=Dataframe[,3]
Dataframe=scale(Dataframe)
Dataframe[,3]=mortality
Dataframe=as.data.frame(Dataframe)
View(Dataframe)
feature=Dataframe[,-"Mortality"]
features=Dataframe[,-3]
View(features)
scale(features)
features=scale(features)
View(features)
features=Dataframe[,-3]
features=scale(features)
View(features)
features=scale(Dataframe[,-3])
View(features)
View(Dataframe)
View(features)
source('~/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(Dataframe)
View(features)
scale(1995)
data=cbind(features, mortality)
View(data)
n=dim(data)[1]
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(train)
help(cv.glmnet)
help(glmnet)
library(cvTools)
library(glmnet)
help(cv.glmnet)
help(glmnet)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
plot(lassomodel)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
MSE
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
MSE
View(covariates)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(features)
View(covariates)
View(features)
data=cbind(features, mortality)
View(data)
lassomodel=cv.glmnet(as.matrix(covariates), response, alpha=1, family="poisson")
plot(lassomodel)
help("predict.cv.glmnet")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(lassomodel)
View(Dataframe)
x=coef(lassomodel, s="lambda.min")
View(x)
View(x)
coef(lassomodel, s="lambda.min")$x[1]
View(x)
coef(lassomodel, s="lambda.min")[[x[1]]]
help("dgCMatrix-class")
coef(lassomodel, s="lambda.min")[1]
View(x)
coef(lassomodel, s="lambda.min")[2]
View(x)
coef(lassomodel, s="lambda.min")[3]
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(Dataframe)
coef(lassomodel, s="lambda.min")[1]
summary(lassomodel)
coef(lassomodel, s="lambda.min")
hpousin
housing
View(features)
View(data)
View(Dataframe)
7.4-0.07
e^(7.33)
exp(7.33)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(train)
View(Dataframe)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
summary(treemodel)
trainScore=numeric(8)
testScore=numeric(8)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
log(7.08)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(treemodel)
View(cv.res)
bestSize=which(min(cv.res$dev) == cv.res$dev)
bestSize=cv.res$size[which(min(cv.res$dev) == cv.res$dev)]
help(predict.tree)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(ynew)
PCAdata=subset(train, select=-Mortality)
pcaAnalysis=prcomp(PCAdata, scale=TRUE)
PCAdata=subset(train, select=-Mortality)
pcaAnalysis=prcomp(PCAdata, scale=TRUE)
screeplot(pcaAnalysis)
lambda=pcaAnalysis$sdev^2
print(lambda)
propVar=lambda/sum(lambda)*100
print(propVar)
PCAdata=subset(train, select=-Mortality)
pcaAnalysis=prcomp(PCAdata, scale=TRUE)
screeplot(pcaAnalysis)
lambda=pcaAnalysis$sdev^2
print(lambda)
#Proportion of variation
propVar=lambda/sum(lambda)*100
print(propVar)
#Function for calculating the number of components needed for explaining at least 95% of the variation.
calcNoVars = function(data){
noOfVars=1
sumOfVariation=data[noOfVars]
while(sumOfVariation<95){
noOfVars=noOfVars+1
sumOfVariation=sumOfVariation+data[noOfVars]
}
return(noOfVars)
}
print(calcNoVars(propVar))
MSE=mean(sum((ynew-y)^2))
MSE=mean((ynew-y)^2)
View(PCAdata)
View(pcaAnalysis)
View(pcaAnalysis)
pcaAnalysis$rotation
help(prcomp)
sumary(pcaAnalysis)
summary(pcaAnalysis)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
setwd("~/Documents/TDDE01/TDDE01_Labs/Lab2 Block 1")
source('~/Documents/TDDE01/TDDE01_Labs/Lab2 Block 1/Lab2_Assignment4.R', echo=TRUE)
View(Dataframe)
View(data)
View(data)
setwd("//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(new_base)
View(Dataframe)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
plot(lasso_PCA)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
print(calcNoVars(propVar))
summary(pcaAnalysis)
new_base=pcaAnalysis$x
lasso_PCA=cv.glmnet(as.matrix(new_base), response, alpha=1, family="poisson", lambda=seq(0,50,0.1))
plot(lasso_PCA)
opt_lambda_PCA=lasso_PCA$lambda.min
coef(lasso_PCA, s="lambda.min")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(lasso_PCA)
help(glmnet)
help("predict.cv.glmnet")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
library(tree)
train=as.data.frame(train)
test=as.data.frame(test)
treemodel=tree(Mortality~., data=train)
set.seed(12345)
cv.res=cv.tree(treemodel)
plot(cv.res$size, cv.res$dev, type="b", col="red")
bestSize=cv.res$size[which(min(cv.res$dev) == cv.res$dev)]
finalTree=prune.tree(treemodel, best=bestSize)
yFit=predict(finalTree, newdata=test, type="vector")
MSE_tree=mean((yFit-test$Mortality)^2)
print(finalTree)
plot(finalTree)
text(finalTree, pretty=0)
PCAdata=subset(train, select=-Mortality)
pcaAnalysis=prcomp(PCAdata, scale=TRUE)
screeplot(pcaAnalysis)
lambda=pcaAnalysis$sdev^2
print(lambda)
#Proportion of variation
propVar=lambda/sum(lambda)*100
print(propVar)
#Function for calculating the number of components needed for explaining at least 95% of the variation.
calcNoVars = function(data){
noOfVars=1
sumOfVariation=data[noOfVars]
while(sumOfVariation<90){
noOfVars=noOfVars+1
sumOfVariation=sumOfVariation+data[noOfVars]
}
return(noOfVars)
}
print(calcNoVars(propVar))
summary(pcaAnalysis)
new_base=pcaAnalysis$x
lasso_PCA=cv.glmnet(as.matrix(new_base), response, alpha=1, family="poisson", lambda=seq(0,50,0.1))
plot(lasso_PCA)
opt_lambda_PCA=lasso_PCA$lambda.min
coef(lasso_PCA, s="lambda.min")
predicted=predict(lasso_PCA, newx=as.matrix(new_base), type="response", s="lambda.min")
variance_PCA=mean((predicted-response)^2)
help("pcr)
""
help("pcr")
library(pls)
help("pcr")
help("pcr")
setwd("~/Documents/TDDE01/TDDE01_Labs/Lab3 Block 1")
source('~/Documents/TDDE01/TDDE01_Labs/Lab3 Block 1/Lab3_Assignment1.R', echo=TRUE)
install.packages("geosphere")
source('~/Documents/TDDE01/TDDE01_Labs/Lab3 Block 1/Lab3_Assignment1.R', echo=TRUE)
source('~/Documents/TDDE01/TDDE01_Labs/Lab3 Block 1/Lab3_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
setwd("//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(lasso_PCA)
mean(lasso_PCA$cvm^2)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
set.seed(12345)
lasso_PCA=cv.glmnet(as.matrix(new_base), response, alpha=1, family="poisson", lambda=seq(0,50,0.1))
plot(lasso_PCA)
opt_lambda_PCA=lasso_PCA$lambda.min
coef(lasso_PCA, s="lambda.min")
predicted=predict(lasso_PCA, newx=as.matrix(new_base[,1:5]), type="response", s="lambda.min")
variance_PCA=mean((predicted-response)^2)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
View(predicted)
View(new_base)
new_base[1]
new_base[[1]]
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment1.R', echo=TRUE)
help(neuralnet)
install.packages("neuralnet")
library(neuralnet)
help(neuralnet)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
View(pred)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
View(nn)
View(nn)
nn$weights
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
y
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
y
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
y
library(kernlab)
data(spam)
help(cv)
help("cvTools")
help(ksvm)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
plot(1:19, validScore)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
plot(1:21, validScore, col="red", type="b")
bestParam=validScore[bestModel]
bestParam=C[bestModel]
?ksvm
min(validScore)
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
help(ksvm)
setwd("//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16")
RNGversion('3.5.1')
Dataframe=read.csv("Influenza.csv")
Mortality=Dataframe$Mortality
like=function(y, lambda){
n=length(y)
return(lambda*n-log(lambda)*sum(y)+sum(log(factorial(y))))
}
#Find maximum likelihood value of theta
lambda_max = function(y){
n=length(y)
return(sum(y)/n)
}
lambda_max=lambda_max(Mortality)
lambda=seq(10,2910,100)
plot(like(Mortality, lambda), lambda, main="The minus loglike function of mortality depending on Lambda",
xlim=c(10,2910))
##Answer: Towards infinity, don't know how to fix
library(cvTools)
library(glmnet)
features=scale(Dataframe[,-3])
data=cbind(features, Mortality)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
covariates=train[,1:8]
response=train[,9]
lassomodel=cv.glmnet(as.matrix(covariates), response, alpha=1, family="poisson")
opt_lambda=lassomodel$lambda.min
plot(lassomodel)
coef(lassomodel, s="lambda.min")
y=test[,9]
ynew=predict(lassomodel, newx=as.matrix(test[,1:8]), type="response", s="lambda.min")
MSE=mean((ynew-y)^2)
interceptval=exp(coef(lassomodel, s="lambda.min")[1])
RNGversion('3.5.1')
Dataframe=read.csv("Influenza.csv")
Mortality=Dataframe$Mortality
like=function(y, lambda){
n=length(y)
return(lambda*n-log(lambda)*sum(y)+sum(log(factorial(y))))
}
#Find maximum likelihood value of theta
lambda_max = function(y){
n=length(y)
return(sum(y)/n)
}
lambda_max=lambda_max(Mortality)
lambda=seq(10,2910,100)
plot(like(Mortality, lambda), lambda, main="The minus loglike function of mortality depending on Lambda",
xlim=c(10,2910))
##Answer: Towards infinity, don't know how to fix
library(cvTools)
library(glmnet)
features=scale(Dataframe[,-3])
data=cbind(features, Mortality)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
covariates=train[,1:8]
response=train[,9]
lassomodel=cv.glmnet(as.matrix(covariates), response, alpha=1, family="poisson")
opt_lambda=lassomodel$lambda.min
plot(lassomodel)
coef(lassomodel, s="lambda.min")
y=test[,9]
ynew=predict(lassomodel, newx=as.matrix(test[,1:8]), type="response", s="lambda.min")
MSE=mean((ynew-y)^2)
interceptval=exp(coef(lassomodel, s="lambda.min")[1])
setwd("//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16")
source('//ad.liu.se/home/chrvo878/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/2019-01-16_Assignment2.R', echo=TRUE)
source('~/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/Tenta20190116SVMs.R', echo=TRUE)
source('~/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/Tenta20190116SVMs.R', echo=TRUE)
source('~/Documents/TDDE01/TDDE01_Labs/Exam/2019-01-16/Tenta20190116SVMs.R', echo=TRUE)
